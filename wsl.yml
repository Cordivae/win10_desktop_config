---
- hosts: localhost

  vars:
    git_location: "~/git"
    bin_location: /usr/local/bin/
    
  tasks:
  - name: install apt packages
    apt:
      pkg:
      - tree 
      - awscli
      - neovim
      state: latest
    become: true

  - name: get pip script
    get_url:
      url: https://bootstrap.pypa.io/get-pip.py
      dest: /tmp/get-pip.py

  - name: install pip
    shell: python /tmp/get-pip.py

  - name: install python dependencies
    pip:
      name:
      - jmespath

  - name: get latest terraform version id
    uri:
      url: 'https://checkpoint-api.hashicorp.com/v1/check/terraform'
      method: GET
      status_code: 200
      timeout: 10
    register: release
  
  - set_fact:
      tf_version: "{{ release.json | json_query('current_version') }}"
  
  - name: terraform is present
    unarchive:
      src: 'https://releases.hashicorp.com/terraform/{{ tf_version }}/terraform_{{ tf_version }}_linux_amd64.zip'
      dest: "{{ bin_location }}"
      remote_src: yes
    become: true

  - name: get tflint releases
    uri:
      url: https://api.github.com/repos/terraform-linters/tflint/releases/latest
      method: GET
      status_code: 200
      timeout: 10
    register: tflint_release

  - set_fact:
      tflint_download_url: "{{ tflint_release.json | json_query(jmesquery) }}"
    vars:
      jmesquery: "assets[?name==`tflint_linux_amd64.zip`].browser_download_url"

  - name: tflint is present
    unarchive:
      src: "{{ tflint_download_url[0] }}"
      dest: "{{ bin_location }}"
      remote_src: yes
    become: true
     
  - name: set up .vimrc symlink
    file:
      src: "{{ playbook_dir }}/.vimrc"
      dest: "~/.vimrc"
      state: link

  - name: shortcut aliases
    lineinfile:
      path: "~/.bash_profile"
      line: "{{ item }}"
      state: present
    loop:
      - "alias vim='nvim -S ~/.vimrc'"
      - "alias tf=terraform"
